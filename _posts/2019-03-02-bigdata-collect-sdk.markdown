---
layout: post
title:  "如何设计一个数据采集的WEBSDK"
date:   2019-03-01 00:18:23 +0700
categories: [bigdata]
---

#### 概述
  上一节我们讲到数据埋点方面的一些工作如何进行，但是由于埋点的成本相对比较高，且容易出
错，我们能不能将部分工作工具化，从而减小在数据采集上面的成本呢？答案是肯定的，那就是我们
运用WEBSDK将上述工作封装起来，并实现相关工作的自动化。
  
#### WEBSDK我们怎么设计  
  那我们具体怎么设计我们的WEBSDK呢？实际上我们上节讲到数据埋点几个关键的点，第一个是
数据采集的时机，数据的协议及数据采集的字段等，那这些我们集成到我们WEBSDK?  
##### 第一步：我们确认我们SDK需要集成那些事件  
  我们确认我们SDK集成那些事件，最为主要的就是了解我们需要采集那些数据，通常对于我们
一个网站或者一个Ｍ站我们需要采集有事件大致上我们可以分解为如下几个重要的事件:  
  
###### 用户浏览类事件  
  用户浏览类事件即用户打一个HTML页面，页面加载完成。表示用户进入到这个页面，通常
我们通过这种事件的数据计算出有多少访问，产生了多少ＰＶ，以及用户的浏览路径等，进行
用户路径的分析等等。
    
###### 用户点击类事件  
  用户点击类事件，通常我们是用户通过触发一个Button或者一个LINK产生一个Click事件
通常我们用于收集一些数据用于观察用于对该类控件的点击情况。CLick大部分为一个用户主动事件
一般结合PV事件或者控件曝光事件计算点击轮化率等指标或者用户改进在线的产品，点击数据是非常
重的数据源因为具有明确的主动意图，所以应用范围相当广。
  
###### 用户控件曝光类事件  
  控件曝光类事件其实是浏览类事件一个分解体，在WEB2.0时代，浏览形式不仅仅只有之前的页面形式
，现在出现更多的展示形态如Tab，如曝布流等或者弹窗。我们不通过ＰＶ来记录该类事件，因为PV表示页面浏览
而我们使用控件曝光来记录这些产品对于用户的展示情况。
  
###### 用户自定义事件  
　　用户自定义事件其实是在上述特定事件无法满足的基础上，为了保证SDK灵活性，而扩展的一类事件
主要特性是不对用户上报的数据及时间不做特定的定义，开发人员可以在任意地点进行调用。以保证SDK灵活性与扩展性。
  
　　

##### 第二步：我们将这些事件分解为数据埋点  
  
  
##### 第三步：我们找到对应的实现方法  
　　
#### WEBSDK如何与其它终端SDK配合使用  


